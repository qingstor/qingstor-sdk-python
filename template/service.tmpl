# +-------------------------------------------------------------------------
# | Copyright (C) 2016 Yunify, Inc.
# +-------------------------------------------------------------------------
# | Licensed under the Apache License, Version 2.0 (the "License");
# | you may not use this work except in compliance with the License.
# | You may obtain a copy of the License in the LICENSE file, or at:
# |
# | http://www.apache.org/licenses/LICENSE-2.0
# |
# | Unless required by applicable law or agreed to in writing, software
# | distributed under the License is distributed on an "AS IS" BASIS,
# | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# | See the License for the specific language governing permissions and
# | limitations under the License.
# +-------------------------------------------------------------------------
# -*- coding: utf-8 -*-

{{ "" }}
{{- $capsule := . -}}
{{- $service := .Data.Service -}}
{{- $subServices := .Data.SubServices -}}
{{- $customizedTypes := .Data.CustomizedTypes -}}
from __future__ import unicode_literals

from requests import Session
from requests.adapters import HTTPAdapter
from urllib3.util.retry import Retry

from .bucket import Bucket
from ..request import Request
from ..unpack import Unpacker


# {{$service.Name | camelCase}} provides {{$service.Name}} Service API (API Version {{$service.APIVersion}})

class {{$service.Name | camelCase}}(object):

    def __init__(self, config):
        self.config = config
        self.client = Session()
        retries = Retry(
            total=self.config.connection_retries,
            backoff_factor=1,
            status_forcelist=[500, 502, 503, 504])
        self.client.mount(self.config.protocol+"://", HTTPAdapter(max_retries=retries))

    {{- range $_, $operation := $service.Operations}}
    {{- template "RenderOperation" passThrough $service.Name $operation $customizedTypes}}
    {{- end}}

    def Bucket(self, bucket_name, zone):
        properties = {
            "bucket-name" : bucket_name,
            "zone" : zone
        }
        client = self.client
        return Bucket(self.config, properties, client)
